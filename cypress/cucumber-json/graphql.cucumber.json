[
  {
    "keyword": "Feature",
    "name": "Test query graphql",
    "line": 1,
    "id": "test-query-graphql",
    "tags": [],
    "uri": "graphql.feature",
    "elements": [
      {
        "id": "test-query-graphql;check-for-query-each-item",
        "keyword": "Scenario",
        "line": 8,
        "name": "Check for query each item",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I send a Post request to http://localhost:4001/graphql with body from queryAuthor.txt file",
            "result": {
              "status": "failed",
              "error_message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4001/graphql\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:4001/graphql\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.6.1 Chrome/94.0.4606.81 Electron/15.5.1 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 110\n}\nBody: {\"query\":\"query {\\r\\n    all_article {\\r\\n      items {\\r\\n        content_format\\r\\n      }\\r\\n    }\\r\\n  }\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"1661\",\n  \"etag\": \"W/\\\"67d-/8itlRivaXoIFdPfsUIpWXiiSnc\\\"\",\n  \"date\": \"Wed, 29 Jun 2022 08:12:02 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"errors\": [\n    {\n      \"message\": \"Field \\\"content_format\\\" of type \\\"ContentFormat\\\" must have a selection of subfields. Did you mean \\\"content_format { ... }\\\"?\",\n      \"locations\": [\n        {\n\"line\": 4,\n\"column\": 9\n        }\n      ],\n      \"extensions\": {\n        \"code\": \"GRAPHQL_VALIDATION_FAILED\",\n        \"exception\": {\n\"stacktrace\": [\n  \"GraphQLError: Field \\\"content_format\\\" of type \\\"ContentFormat\\\" must have a selection of subfields. Did you mean \\\"content_format { ... }\\\"?\",\n  \"    at Object.Field (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\graphql\\\\validation\\\\rules\\\\ScalarLeafsRule.js:40:31)\",\n  \"    at Object.enter (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\graphql\\\\language\\\\visitor.js:323:29)\",\n  \"    at Object.enter (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\graphql\\\\utilities\\\\TypeInfo.js:370:25)\",\n  \"    at visit (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\graphql\\\\language\\\\visitor.js:243:26)\",\n  \"    at validate (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\graphql\\\\validation\\\\validate.js:69:24)\",\n  \"    at validate (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\apollo-server-core\\\\src\\\\requestPipeline.ts:470:27)\",\n  \"    at processGraphQLRequest (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\apollo-server-core\\\\src\\\\requestPipeline.ts:261:30)\",\n  \"    at processTicksAndRejections (node:internal/process/task_queues:96:5)\",\n  \"    at processHTTPRequest (C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\smart-connections-monorepo\\\\node_modules\\\\apollo-server-core\\\\src\\\\runHttpQuery.ts:433:24)\"\n]\n        }\n      }\n    }\n  ]\n}\n\n\nhttps://on.cypress.io/request\n    at https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:165424:80\n    at tryCatcher (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:70:12)"
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 5,
            "name": "Response code is 200",
            "result": {
              "status": "skipped"
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;check-for-query-each-item",
        "keyword": "Scenario",
        "line": 9,
        "name": "Check for query each item",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I send a Post request to http://localhost:4001/graphql with body from queryTitle.txt file",
            "result": {
              "status": "passed",
              "duration": 113000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 5,
            "name": "Response code is 200",
            "result": {
              "status": "passed",
              "duration": 7000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;query-with-contributor-uid-as-1234",
        "keyword": "Scenario",
        "line": 16,
        "name": "query with contributor uid as 1234",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I make a Post request to http://localhost:4001/graphql with contributor has uid as 1234",
            "result": {
              "status": "failed",
              "error_message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4001/graphql%20with%20contributor%20has%20uid%20as%201234\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:4001/graphql%20with%20contributor%20has%20uid%20as%201234\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.6.1 Chrome/94.0.4606.81 Electron/15.5.1 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"116\",\n  \"etag\": \"W/\\\"74-Bw2hwfxmwVJDxR/DONvhYOGbluY\\\"\",\n  \"date\": \"Wed, 29 Jun 2022 08:12:03 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"statusCode\": 404,\n  \"message\": \"Cannot POST /graphql%20with%20contributor%20has%20uid%20as%201234\",\n  \"error\": \"Not Found\"\n}\n\n\nhttps://on.cypress.io/request\n    at https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:165424:80\n    at tryCatcher (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:35:8)\n    at Context.resolveAndRunStepDefinition (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:45312:29)\n    at Context.eval (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:44633:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "Response code is 200",
            "result": {
              "status": "skipped"
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;query-with-contributor-uid-as-4444",
        "keyword": "Scenario",
        "line": 17,
        "name": "query with contributor uid as 4444",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I make a Post request to http://localhost:4001/graphql with contributor has uid as 4444",
            "result": {
              "status": "failed",
              "error_message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4001/graphql%20with%20contributor%20has%20uid%20as%204444\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:4001/graphql%20with%20contributor%20has%20uid%20as%204444\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.6.1 Chrome/94.0.4606.81 Electron/15.5.1 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 404 - Not Found\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"116\",\n  \"etag\": \"W/\\\"74-Jgyl7O5XTEJvmL1dOq3V4drqrwI\\\"\",\n  \"date\": \"Wed, 29 Jun 2022 08:12:04 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"statusCode\": 404,\n  \"message\": \"Cannot POST /graphql%20with%20contributor%20has%20uid%20as%204444\",\n  \"error\": \"Not Found\"\n}\n\n\nhttps://on.cypress.io/request\n    at https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:165424:80\n    at tryCatcher (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://stage.quantumbusinessnews.com/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:35:8)\n    at Context.resolveAndRunStepDefinition (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:45312:29)\n    at Context.eval (https://stage.quantumbusinessnews.com/__cypress/tests?p=cypress\\integration\\features\\graphql.feature:44633:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "Response code is 200",
            "result": {
              "status": "skipped"
            }
          }
        ]
      }
    ]
  }
]