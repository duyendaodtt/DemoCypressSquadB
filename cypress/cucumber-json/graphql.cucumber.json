[
  {
    "keyword": "Feature",
    "name": "Test query graphql",
    "line": 1,
    "id": "test-query-graphql",
    "tags": [],
    "uri": "graphql.feature",
    "elements": [
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 8,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create keyword entry with a body from keywords.txt",
            "result": {
              "status": "passed",
              "duration": 958000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this keyword",
            "result": {
              "status": "passed",
              "duration": 886000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 9,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create contributor entry with a body from contributor.txt",
            "result": {
              "status": "passed",
              "duration": 1105000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this contributor",
            "result": {
              "status": "passed",
              "duration": 864000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 10,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create subbrand entry with a body from subbrand.txt",
            "result": {
              "status": "passed",
              "duration": 1024000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this subbrand",
            "result": {
              "status": "passed",
              "duration": 888000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 11,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create content_format entry with a body from contentformat.txt",
            "result": {
              "status": "passed",
              "duration": 909000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this content_format",
            "result": {
              "status": "passed",
              "duration": 874000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 18,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create article entry with body from _Article.txt",
            "result": {
              "status": "passed",
              "duration": 950000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this article",
            "result": {
              "status": "passed",
              "duration": 872000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 19,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create document entry with body from _Document.txt",
            "result": {
              "status": "passed",
              "duration": 965000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this document",
            "result": {
              "status": "passed",
              "duration": 901000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 20,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create basic_page entry with body from _BasicPage.txt",
            "result": {
              "status": "passed",
              "duration": 942000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this basic_page",
            "result": {
              "status": "passed",
              "duration": 903000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 21,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create event entry with body from _Event.txt",
            "result": {
              "status": "passed",
              "duration": 963000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this event",
            "result": {
              "status": "passed",
              "duration": 881000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 22,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create podcast entry with body from _Podcast.txt",
            "result": {
              "status": "passed",
              "duration": 988000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this podcast",
            "result": {
              "status": "passed",
              "duration": 883000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 23,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create video entry with body from _Video.txt",
            "result": {
              "status": "passed",
              "duration": 945000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this video",
            "result": {
              "status": "passed",
              "duration": 931000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 36,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete article entry with uid from Article.txt",
            "result": {
              "status": "passed",
              "duration": 1119000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 37,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete document entry with uid from Document.txt",
            "result": {
              "status": "passed",
              "duration": 1001000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 38,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete basic_page entry with uid from basic_page.txt",
            "result": {
              "status": "passed",
              "duration": 1156000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 39,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete event entry with uid from Event.txt",
            "result": {
              "status": "passed",
              "duration": 999000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 40,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete podcast entry with uid from Podcast.txt",
            "result": {
              "status": "passed",
              "duration": 1038000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 41,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete video entry with uid from Video.txt",
            "result": {
              "status": "passed",
              "duration": 1013000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 42,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete keyword entry with uid from keyword.txt",
            "result": {
              "status": "passed",
              "duration": 1043000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 43,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete contributor entry with uid from contributor.txt",
            "result": {
              "status": "passed",
              "duration": 999000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 44,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete subbrand entry with uid from subbrand.txt",
            "result": {
              "status": "passed",
              "duration": 1018000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 45,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "I delete content_format entry with uid from content_format.txt",
            "result": {
              "status": "passed",
              "duration": 1327000000
            }
          }
        ]
      }
    ]
  }
]