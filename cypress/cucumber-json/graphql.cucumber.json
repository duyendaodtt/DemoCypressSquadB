[
  {
    "keyword": "Feature",
    "name": "Test query graphql",
    "line": 1,
    "id": "test-query-graphql",
    "tags": [],
    "uri": "graphql.feature",
    "elements": [
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 8,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create keyword entry with a body from keywords.txt",
            "result": {
              "status": "passed",
              "duration": 3045000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this keyword",
            "result": {
              "status": "passed",
              "duration": 912000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 9,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create contributor entry with a body from contributor.txt",
            "result": {
              "status": "passed",
              "duration": 953000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this contributor",
            "result": {
              "status": "passed",
              "duration": 918000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 10,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create subbrand entry with a body from subbrand.txt",
            "result": {
              "status": "passed",
              "duration": 934000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this subbrand",
            "result": {
              "status": "passed",
              "duration": 892000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---prepare-data",
        "keyword": "Scenario",
        "line": 11,
        "name": "API E2E - Prepare Data",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 4,
            "name": "I create content_format entry with a body from contentformat.txt",
            "result": {
              "status": "passed",
              "duration": 940000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 5,
            "name": "I publish this content_format",
            "result": {
              "status": "passed",
              "duration": 903000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 18,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create article entry with body from _Article.txt",
            "result": {
              "status": "passed",
              "duration": 976000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this article",
            "result": {
              "status": "passed",
              "duration": 924000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 19,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create document entry with body from _Document.txt",
            "result": {
              "status": "passed",
              "duration": 986000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this document",
            "result": {
              "status": "passed",
              "duration": 999000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 20,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create basic_page entry with body from _BasicPage.txt",
            "result": {
              "status": "passed",
              "duration": 1044000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this basic_page",
            "result": {
              "status": "passed",
              "duration": 1026000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 21,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create event entry with body from _Event.txt",
            "result": {
              "status": "passed",
              "duration": 995000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this event",
            "result": {
              "status": "passed",
              "duration": 1012000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 22,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create podcast entry with body from _Podcast.txt",
            "result": {
              "status": "passed",
              "duration": 1002000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this podcast",
            "result": {
              "status": "passed",
              "duration": 959000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 23,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create video entry with body from _Video.txt",
            "result": {
              "status": "passed",
              "duration": 1029000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this video",
            "result": {
              "status": "passed",
              "duration": 916000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 24,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create magazine entry with body from _Magazine.txt",
            "result": {
              "status": "passed",
              "duration": 976000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this magazine",
            "result": {
              "status": "passed",
              "duration": 935000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 25,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create external_link entry with body from _ExternalLink.txt",
            "result": {
              "status": "passed",
              "duration": 964000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this external_link",
            "result": {
              "status": "passed",
              "duration": 930000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---create-content-type-entries",
        "keyword": "Scenario",
        "line": 26,
        "name": "API E2E - Create Content Type Entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I update and create topic_primary entry with body from _TopicPrimary.txt",
            "result": {
              "status": "passed",
              "duration": 970000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I publish this topic_primary",
            "result": {
              "status": "passed",
              "duration": 895000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 39,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete article entry with uid from Article.txt",
            "result": {
              "status": "passed",
              "duration": 1150000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 40,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete document entry with uid from Document.txt",
            "result": {
              "status": "passed",
              "duration": 1236000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 41,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete basic_page entry with uid from basic_page.txt",
            "result": {
              "status": "passed",
              "duration": 1010000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 42,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete event entry with uid from Event.txt",
            "result": {
              "status": "passed",
              "duration": 1059000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 43,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete podcast entry with uid from Podcast.txt",
            "result": {
              "status": "passed",
              "duration": 1098000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 44,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete video entry with uid from Video.txt",
            "result": {
              "status": "passed",
              "duration": 1104000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 45,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete keyword entry with uid from keyword.txt",
            "result": {
              "status": "passed",
              "duration": 1146000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 46,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete contributor entry with uid from contributor.txt",
            "result": {
              "status": "passed",
              "duration": 1041000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 47,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete subbrand entry with uid from subbrand.txt",
            "result": {
              "status": "passed",
              "duration": 1071000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 48,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete content_format entry with uid from content_format.txt",
            "result": {
              "status": "passed",
              "duration": 1035000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 49,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete magazine entry with uid from magazine.txt",
            "result": {
              "status": "passed",
              "duration": 1036000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 50,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete external_link entry with uid from external_link.txt",
            "result": {
              "status": "passed",
              "duration": 1042000000
            }
          }
        ]
      },
      {
        "id": "test-query-graphql;api-e2e---delete-entries",
        "keyword": "Scenario",
        "line": 51,
        "name": "API E2E - Delete entries",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I delete topic_primary entry with uid from topic_primary.txt",
            "result": {
              "status": "passed",
              "duration": 1232000000
            }
          }
        ]
      }
    ]
  }
]